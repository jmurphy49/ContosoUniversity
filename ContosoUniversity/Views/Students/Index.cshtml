@model ContosoUniversity.Helpers.PaginatedList<ContosoUniversity.Models.Student>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@{
    ViewData["Title"] = "Students";
}
<h2>Students</h2>

<form asp-action="Index" method="get">
    <div class="input-group">
        <div class="input-group-btn">
            <input type="text" class="form-control" name="searchString" placeholder="Search" value="@ViewData["CurrentFilter"]">
            <button class="btn btn-default" type="submit">
                <i class="glyphicon glyphicon-search"></i>
            </button>
        </div>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.NameSortParam" asp-route-searchString="@ViewBag.CurrentFilter">
                    LastName
                </a>
            </th>
            <th>
                FirstName
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.DateSortParam">
                    EnrollmentDate
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<center>
    <p>
        @if (await AuthorizationService.AuthorizeAsync(User,"Administrators"))
        {
            <a asp-action="Create">Create New </a>
        }      
        | 
        <a asp-action="Index"> Back to List</a>
    </p>
</center>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex-1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled btn">Previous</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex+1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled btn pull-right">Next</a>
