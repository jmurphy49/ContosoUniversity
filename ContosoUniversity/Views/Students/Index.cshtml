@model ContosoUniversity.Helpers.PaginatedList<ContosoUniversity.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get" class="col-md-4">
    <div class="form-actions no-color">
        <div class="input-group">
                       <div class="input-group-btn">
                           <input type="text" class="form-control" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Name">
                <button class="btn btn-default" type="submit">
                    <i class="glyphicon glyphicon-search"></i>
                </button>
            </div>
        </div>
    </div>
</form>
<form asp-action="Index">
    <input type="submit" value="Back to List" class="btn btn-default pull-right">
</form>
<table class="table">
    <thead>
        <tr>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.LastSortParam" asp-route-searchString="@ViewBag.CurrentFilter">
                    Last Name
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.FirstSortParam" asp-route-searchString="@ViewBag.CurrentFilter">
                    First Name
                </a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.DateSortParam" asp-route-searchString="@ViewBag.CurrentFilter">
                    Enrollment Date
                </a>
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>

                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }

    </tbody>

</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex-1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled btn">Previous</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex+1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled btn pull-right">Next</a>